{"ast":null,"code":"var _jsxFileName = \"/home/springnuance/Desktop/part2/Exercise 2.15 - 2.18 The Phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Person from './components/Person';\nimport personService from './services/personService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = ({\n  filter,\n  handleFilter\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Filter name \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: filter,\n      onChange: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Filter;\n\nconst Persons = ({\n  PersonsToShow,\n  deletePerson\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: PersonsToShow.map((person, i) => /*#__PURE__*/_jsxDEV(Person, {\n      person: person,\n      deletePerson: deletePerson\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Persons;\n\nconst PersonForm = ({\n  addPerson,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addPerson,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newName,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNumber,\n        onChange: handleNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = PersonForm;\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n  console.log('render', persons.length, 'notes');\n  const PersonsToShow = !filter ? persons : persons.filter(person => person.name.toLowerCase().includes(filter));\n\n  const addPerson = event => {\n    event.preventDefault();\n    const person = persons.filter(person => person.name === newName);\n    const personToAdd = person[0];\n    const updatedPerson = { ...personToAdd,\n      number: newNumber\n    };\n\n    if (person.length !== 0) {\n      if (window.confirm(`${personToAdd.name} is already added to the phonebook, replace the old number with a new one ?`)) {\n        personService.update(updatedPerson.id, updatedPerson).then(returnedPerson => {\n          console.log(`${returnedPerson.name} successfully updated`);\n          setAllPersons(allPersons.map(personItem => personItem.id !== personToAdd.id ? personItem : returnedPerson));\n          setNewName('');\n          setNewNumber('');\n          setMessage(`${updatedPerson.name} was successfully updated`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        }).catch(error => {\n          console.log(error);\n          setAllPersons(allPersons.filter(person => person.id !== updatedPerson.id));\n          setNewName('');\n          setNewNumber('');\n          setMessage(`[ERROR] ${updatedPerson.name} was already deleted from server`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n      }\n    } else {\n      personService.create(personObject).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  };\n\n  const deletePerson = id => {\n    const deletedPerson = persons.filter(person => person.id === id);\n    const name = deletedPerson[0].name;\n\n    if (window.confirm(`Delete ${name} from the phonebook?`)) {\n      personService.remove(id);\n      console.log(`${name} successfully deleted`);\n      setPersons(persons.filter(person => person.id !== id));\n    }\n  };\n\n  const handleFilter = event => {\n    console.log(event.target.value);\n    setFilter(event.target.value);\n  };\n\n  const handleNameChange = event => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    console.log(event.target.value);\n    setNewNumber(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      handleFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a new phone record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      addPerson: addPerson,\n      newName: newName,\n      handleNameChange: handleNameChange,\n      newNumber: newNumber,\n      handleNumberChange: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      PersonsToShow: PersonsToShow,\n      deletePerson: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"sEq+SWWXqtQuBu4makTng8FZxEw=\");\n\n_c4 = App;\nexport default App;\n/** \nimport React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(false)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n    .update(id, changedNote)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      alert(\n        `the note '${note.content}' was already deleted from server`\n      )\n      setNotes(notes.filter(n => n.id !== id))\n    })    \n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map(note => \n            <Note\n              key={note.id}\n              note={note} \n              toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>  \n    </div>\n  )\n}\n\nexport default App\n*/\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Filter\");\n$RefreshReg$(_c2, \"Persons\");\n$RefreshReg$(_c3, \"PersonForm\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/springnuance/Desktop/part2/Exercise 2.15 - 2.18 The Phonebook/src/App.js"],"names":["React","useState","useEffect","Person","personService","Filter","filter","handleFilter","Persons","PersonsToShow","deletePerson","map","person","i","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","App","persons","setPersons","setNewName","setNewNumber","setFilter","getAll","then","initialPersons","console","log","length","name","toLowerCase","includes","event","preventDefault","personToAdd","updatedPerson","number","window","confirm","update","id","returnedPerson","setAllPersons","allPersons","personItem","setMessage","setTimeout","catch","error","create","personObject","concat","deletedPerson","remove","target","value"],"mappings":"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OAAD;AAAS,MAAA,aAAa,EAAEV,aAAxB;AAAuC,MAAA,YAAY,EAAIC;AAAvD;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA7GD;;GAAMU,G;;MAAAA,G;AA+GN,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport personService from './services/personService'\n\nconst Filter = ({filter, handleFilter}) => {\n  return (\n    <div>Filter name <input value = {filter} onChange={handleFilter}/></div>\n  )\n}\n\nconst Persons = ({PersonsToShow, deletePerson}) => {\n  return (\n    <ul>\n    {PersonsToShow.map((person, i) => \n        <Person key={i} person={person} deletePerson = {deletePerson} />\n    )}\n  </ul>\n  )\n}\n\nconst PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\n  return (\n    <form onSubmit={addPerson}>\n    <div> Name: <input value = {newName} onChange={handleNameChange}/></div>\n    <div> Number: <input value = {newNumber} onChange={handleNumberChange}/></div>\n    <div><button type=\"submit\">add</button></div>\n  </form>\n  )\n} \n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n      setPersons(initialPersons)\n    })\n  }, [])\n\n  console.log('render', persons.length, 'notes')\n\n  const PersonsToShow = !filter ? persons : persons.filter(person => person.name.toLowerCase().includes(filter))\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const person = persons.filter((person) =>\n        person.name === newName\n    )\n\n    const personToAdd = person[0]\n    const updatedPerson = { ...personToAdd, number: newNumber }\n\n    if (person.length !== 0) {\n      if (window.confirm(`${personToAdd.name} is already added to the phonebook, replace the old number with a new one ?`)) {\n        personService\n          .update(updatedPerson.id, updatedPerson).then(returnedPerson => {\n            console.log(`${returnedPerson.name} successfully updated`)\n            setAllPersons(allPersons.map(personItem => personItem.id !== personToAdd.id ? personItem : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setMessage(\n              `${updatedPerson.name} was successfully updated`\n            )\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n          .catch((error) => {\n            console.log(error)\n            setAllPersons(allPersons.filter(person => person.id !== updatedPerson.id))\n            setNewName('')\n            setNewNumber('')\n            setMessage(\n              `[ERROR] ${updatedPerson.name} was already deleted from server`\n            )\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n      }\n\n    } else {\n      personService\n      .create(personObject)\n        .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n      })\n    }\n  }\n\n  const deletePerson = (id) => {\n    const deletedPerson = persons.filter(person => person.id === id)\n    const name = deletedPerson[0].name\n    if (window.confirm(`Delete ${name} from the phonebook?`)) {\n      personService.remove(id)\n      console.log(`${name} successfully deleted`)\n      setPersons(persons.filter(person => person.id !== id))\n    }\n  }\n\n  const handleFilter = (event) => {\n    console.log(event.target.value)\n    setFilter(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter filter={filter} handleFilter={handleFilter}/>\n      <h3>Add a new phone record</h3>\n      <PersonForm addPerson={addPerson} \n        newName = {newName} \n        handleNameChange = {handleNameChange} \n        newNumber={newNumber} \n        handleNumberChange = {handleNumberChange}/>\n      <h3>Numbers</h3>\n      <Persons PersonsToShow={PersonsToShow} deletePerson = {deletePerson} />\n    </div>\n  )\n}\n\nexport default App\n\n/** \nimport React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(false)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n    .update(id, changedNote)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      alert(\n        `the note '${note.content}' was already deleted from server`\n      )\n      setNotes(notes.filter(n => n.id !== id))\n    })    \n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map(note => \n            <Note\n              key={note.id}\n              note={note} \n              toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>  \n    </div>\n  )\n}\n\nexport default App\n*/\n\n"]},"metadata":{},"sourceType":"module"}