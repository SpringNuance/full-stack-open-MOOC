{"version":3,"sources":["components/Person.js","components/Notifications.js","services/personService.js","App.js","index.js"],"names":["Person","person","deletePerson","name","number","onClick","id","Notifications","message","includes","className","baseUrl","exportedObject","getAll","axios","get","then","response","data","create","newObject","post","update","put","remove","delete","Filter","filter","handleFilter","value","onChange","Persons","PersonsToShow","map","i","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","personService","initialPersons","toLowerCase","event","console","log","target","preventDefault","personInList","newPerson","window","confirm","personRequest","newPersons","setTimeout","catch","error","personObject","returnedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5493fd3.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person, deletePerson }) => {\n  return (\n    <li>{person.name} {person.number} <button onClick = {() => deletePerson(person.id)}>delete</button></li>\n  )\n}\n\nexport default Person\n\n/* \nimport React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li>\n      {note.content} \n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n*/","import React from 'react'\n\nconst Notifications = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n\n    if (message.includes('!')) {\n        return (\n            <div className=\"error\">\n              {message}\n            </div>\n          )\n    } else {\n        return (\n            <div className=\"success\">\n              {message}\n            </div>\n          )\n    }\n  \n    \n  }\n\nexport default Notifications","import axios from 'axios'\n\nconst baseUrl = 'api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst exportedObject = {\n  getAll, create, update, remove,\n};\n\nexport default exportedObject;\n\n/* \nimport axios from 'axios'\nconst baseUrl = 'http://localhost:3001/notes'\n\nconst getAll2 = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { \n  getAll, create, update\n}\n*/","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport Notifications from './components/Notifications'\nimport personService from './services/personService'\n\nconst Filter = ({filter, handleFilter}) => {\n  return (\n    <div>Filter name <input value = {filter} onChange={handleFilter}/></div>\n  )\n}\n\nconst Persons = ({PersonsToShow, deletePerson}) => {\n  return (\n    <ul>\n    {PersonsToShow.map((person, i) => \n        <Person key={i} person={person} deletePerson = {deletePerson} />\n    )}\n  </ul>\n  )\n}\n\nconst PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\n  return (\n    <form onSubmit={addPerson}>\n    <div> Name: <input value = {newName} onChange={handleNameChange}/></div>\n    <div> Number: <input value = {newNumber} onChange={handleNumberChange}/></div>\n    <div><button type=\"submit\">add</button></div>\n  </form>\n  )\n} \n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter] = useState('')\n  const [ message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n      setPersons(initialPersons)\n    })\n  }, [])\n\n  const PersonsToShow = !filter ? persons : persons.filter(person => person.name.toLowerCase().includes(filter))\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    if (persons.map(person => person.name).includes(newName)){\n      const personInList = persons.filter(person => person.name === newName)[0]\n      const newPerson = { ...personInList, number: newNumber }\n      const id = personInList.id\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n          personService.update(id, newPerson).then(personRequest => {\n          console.log(`${newName}'s phone number successfully updated`)\n          const newPersons = persons.map(person => person.id !== id ? person : personRequest)\n          setPersons(newPersons)\n          setMessage(`${newName} was successfully updated`)\n          setTimeout(() => {setMessage(null)}, 4000)\n        }).catch(error => {\n          console.log(error)\n          setPersons(persons.filter(person => person.id !== id))\n          setNewName('')\n          setNewNumber('')\n          setMessage(`${error.response.data.error}!`)\n          //setMessage(`Information of ${personInList.name} has already been deleted from server!`)\n          setTimeout(() => {setMessage(null)}, 40000)\n        })\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      }\n     \n        personService.create(personObject)\n        .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setMessage(`${newName} was successfully added`)\n        setTimeout(() => {setMessage(null)}, 4000)\n      }).catch(error => {\n        setMessage(`${error.response.data.error}!`)\n        setTimeout(() => {setMessage(null)}, 4000)\n      })\n    \n      \n  }\n}\n\n  const deletePerson = (id) => {\n    const deletedPerson = persons.filter(person => person.id === id)\n    const name = deletedPerson[0].name\n    if (window.confirm(`Delete ${name} from the phonebook?`)) {\n      personService.remove(id).then(response => {\n        setPersons(persons.filter(person => person.id !== id))\n        setMessage(`${name} was successfully deleted`)\n        setTimeout(() => {setMessage(null)}, 4000)\n      }).catch(error => {\n        setPersons(persons.filter(person => person.id !== id))\n        setMessage(`${name} has already been deleted!`)\n        setTimeout(() => {setMessage(null)}, 4000)\n      })\n    }\n  }\n\n  const handleFilter = (event) => {\n    console.log(event.target.value)\n    setFilter(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n\n\n  return (\n    <div>\n      <Notifications message={message} />\n      <h1>Phonebook </h1>\n      <Filter filter={filter} handleFilter={handleFilter}/>\n      <h1>Add a new phone record</h1>\n      <PersonForm addPerson={addPerson} \n        newName = {newName} \n        handleNameChange = {handleNameChange} \n        newNumber={newNumber} \n        handleNumberChange = {handleNumberChange}/>\n      <h1>Numbers</h1>\n      <Persons PersonsToShow={PersonsToShow} deletePerson = {deletePerson} />\n    </div>\n  )\n}\n\nexport default App\n\n/** \nimport React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(false)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n    .update(id, changedNote)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      alert(\n        `the note '${note.content}' was already deleted from server`\n      )\n      setNotes(notes.filter(n => n.id !== id))\n    })    \n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>   \n      <ul>\n        {notesToShow.map(note => \n            <Note\n              key={note.id}\n              note={note} \n              toggleImportance={() => toggleImportanceOf(note.id)}\n            />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>  \n    </div>\n  )\n}\n\nexport default App\n*/\n\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\n/* \nimport ReactDOM from 'react-dom'\nimport App from './App.js'\n\nReactDOM.render(<App />, document.getElementById('root'))\n*/"],"sourceRoot":""}